{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Bold;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red104\green177\blue255;\red12\green14\blue18;\red224\green232\blue240;
\red111\green230\blue116;}
{\*\expandedcolortbl;;\cssrgb\c47451\c75294\c100000;\cssrgb\c5098\c6667\c9020;\cssrgb\c90196\c92941\c95294;
\cssrgb\c49412\c90588\c52941;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\b\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 # ES-Lab-Project
\f1\b0 \cf4 \cb1 \strokec4 \

\f0\b \cf2 \cb3 \strokec2 # Automatic Water Tap: An Arduino Project
\f1\b0 \cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf4 \cb3 #include <\cf5 \strokec5 Servo.h\cf4 \strokec4 >\cb1 \
\
\cb3 Servo myServo;\cb1 \
\cb3 const int trigPin = 9;\cb1 \
\cb3 const int echoPin = 10;\cb1 \
\cb3 const int servoPin = 3;\cb1 \
\cb3 long duration;\cb1 \
\cb3 int distanceCm;\cb1 \
\cb3 int threshold = 10; // cm\cb1 \
\
\cb3 void setup() \{\cb1 \
\cb3   Serial.begin(9600);\cb1 \
\cb3   myServo.attach(servoPin);\cb1 \
\cb3   myServo.write(0); // Close valve\cb1 \
\cb3   pinMode(trigPin, OUTPUT);\cb1 \
\cb3   pinMode(echoPin, INPUT);\cb1 \
\cb3 \}\cb1 \
\
\cb3 void loop() \{\cb1 \
\cb3   digitalWrite(trigPin, LOW);\cb1 \
\cb3   delayMicroseconds(2);\cb1 \
\cb3   digitalWrite(trigPin, HIGH);\cb1 \
\cb3   delayMicroseconds(10);\cb1 \
\cb3   digitalWrite(trigPin, LOW);\cb1 \
\
\cb3   duration = pulseIn(echoPin, HIGH);\cb1 \
\cb3   distanceCm = duration * 0.034 / 2;\cb1 \
\
\cb3   if (distanceCm <= threshold && distanceCm >= 0) \{\cb1 \
\cb3     myServo.write(90); // Open valve\cb1 \
\cb3     delay(5000); // Water runs for 5 seconds\cb1 \
\cb3     myServo.write(0); // Close valve\cb1 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
}